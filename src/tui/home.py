from textual.screen import Screen
from textual.app import ComposeResult
from textual.widgets import Label, Footer


ART = """\
 ____ ____ ____ ____ _________ ____ ____ ____ ____ ____
||w |||o |||r |||d |||       |||j |||u |||d |||g |||e ||
||__|||__|||__|||__|||_______|||__|||__|||__|||__|||__||
|/__\|/__\|/__\|/__\|/_______\|/__\|/__\|/__\|/__\|/__\|
"""

INTRO = """\
# welcome to wordjudge!

- wordjudge is a simple application that allows you to classify text to detect
text generated by LLMs (large lenguage models).

---

developed by **Antonio Rodriguez Ruiz** and **AdriÃ¡n Romero Flores** for the MLE 24/25 course.
"""


class Home(Screen):
    CSS = """
        Home {
            align: center top;
            background: $background;
        }
        .title {
            margin: 4;
            color: $text-primary;
            background: $primary-muted;
            border: $text-primary;
        }
        Markdown {
            margin-right: 1;
            padding-right: 1;
            background: transparent;
        }
    """

    def compose(self) -> ComposeResult:
        yield Label(ART, classes="title")
        yield
        yield Footer()
